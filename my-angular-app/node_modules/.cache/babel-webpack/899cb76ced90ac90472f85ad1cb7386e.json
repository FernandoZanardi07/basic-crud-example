{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, booleanAttribute, Component, ChangeDetectionStrategy, ViewEncapsulation, Input } from '@angular/core';\nimport { isEmpty } from '@primeuix/utils';\nimport { BaseComponent } from 'primeng/basecomponent';\nimport { BaseStyle } from 'primeng/base';\nconst css = `\n.p-icon {\n    display: inline-block;\n    vertical-align: baseline;\n}\n\n.p-icon-spin {\n    -webkit-animation: p-icon-spin 2s infinite linear;\n    animation: p-icon-spin 2s infinite linear;\n}\n\n@-webkit-keyframes p-icon-spin {\n    0% {\n        -webkit-transform: rotate(0deg);\n        transform: rotate(0deg);\n    }\n    100% {\n        -webkit-transform: rotate(359deg);\n        transform: rotate(359deg);\n    }\n}\n\n@keyframes p-icon-spin {\n    0% {\n        -webkit-transform: rotate(0deg);\n        transform: rotate(0deg);\n    }\n    100% {\n        -webkit-transform: rotate(359deg);\n        transform: rotate(359deg);\n    }\n}\n`;\n\nclass BaseIconStyle extends BaseStyle {\n  name = 'baseicon';\n  inlineStyles = css;\n  static ɵfac = /*@__PURE__*/(() => {\n    let ɵBaseIconStyle_BaseFactory;\n    return function BaseIconStyle_Factory(__ngFactoryType__) {\n      return (ɵBaseIconStyle_BaseFactory || (ɵBaseIconStyle_BaseFactory = i0.ɵɵgetInheritedFactory(BaseIconStyle)))(__ngFactoryType__ || BaseIconStyle);\n    };\n  })();\n  static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: BaseIconStyle,\n    factory: BaseIconStyle.ɵfac\n  });\n}\n\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BaseIconStyle, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n *\n * [Live Demo](https://www.primeng.org/)\n *\n * @module baseiconstyle\n *\n */\n\n\nvar BaseIconClasses = /*#__PURE__*/(() => {\n  (function (BaseIconClasses) {\n    BaseIconClasses[\"root\"] = \"p-icon\";\n  })(BaseIconClasses || (BaseIconClasses = {}));\n\n  return BaseIconClasses;\n})();\nconst _c0 = [\"*\"];\n\nclass BaseIcon extends BaseComponent {\n  label;\n  spin = false;\n  styleClass;\n  role;\n  ariaLabel;\n  ariaHidden;\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.getAttributes();\n  }\n\n  getAttributes() {\n    const isLabelEmpty = isEmpty(this.label);\n    this.role = !isLabelEmpty ? 'img' : undefined;\n    this.ariaLabel = !isLabelEmpty ? this.label : undefined;\n    this.ariaHidden = isLabelEmpty;\n  }\n\n  getClassNames() {\n    return `p-icon ${this.styleClass ? this.styleClass + ' ' : ''}${this.spin ? 'p-icon-spin' : ''}`;\n  }\n\n  static ɵfac = /*@__PURE__*/(() => {\n    let ɵBaseIcon_BaseFactory;\n    return function BaseIcon_Factory(__ngFactoryType__) {\n      return (ɵBaseIcon_BaseFactory || (ɵBaseIcon_BaseFactory = i0.ɵɵgetInheritedFactory(BaseIcon)))(__ngFactoryType__ || BaseIcon);\n    };\n  })();\n  static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BaseIcon,\n    selectors: [[\"ng-component\"]],\n    hostAttrs: [1, \"p-component\", \"p-iconwrapper\"],\n    inputs: {\n      label: \"label\",\n      spin: [2, \"spin\", \"spin\", booleanAttribute],\n      styleClass: \"styleClass\"\n    },\n    features: [i0.ɵɵProvidersFeature([BaseIconStyle]), i0.ɵɵInputTransformsFeature, i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    template: function BaseIcon_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵprojection(0);\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BaseIcon, [{\n    type: Component,\n    args: [{\n      template: ` <ng-content></ng-content> `,\n      standalone: true,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      providers: [BaseIconStyle],\n      host: {\n        class: 'p-component p-iconwrapper'\n      }\n    }]\n  }], null, {\n    label: [{\n      type: Input\n    }],\n    spin: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    styleClass: [{\n      type: Input\n    }]\n  });\n})();\n\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassDebugInfo(BaseIcon, {\n    className: \"BaseIcon\",\n    filePath: \"baseicon.ts\",\n    lineNumber: 16\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { BaseIcon, BaseIconClasses, BaseIconStyle }; //# sourceMappingURL=primeng-icons-baseicon.mjs.map","map":null,"metadata":{},"sourceType":"module"}